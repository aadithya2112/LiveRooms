name: Deploy to VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }} # VM IP Address/Hostname
          username: ${{ secrets.SSH_USER }} # VM Username
          key: ${{ secrets.SSH_PRIVATE_KEY }} # VM Private SSH Key
          script: |
            # Define project directory and repo URL
            APP_DIR="/home/${{ secrets.SSH_USER }}/live-rooms-app" # Or choose another suitable location like /var/www/live-rooms-app
            REPO_URL="https://github.com/${{ github.repository }}.git" # Your repository URL

            # Ensure Docker and Docker Compose are installed (add installation commands if needed)
            if ! command -v docker &> /dev/null; then
                echo "Docker could not be found, please install it on the VM."
                exit 1
            fi
            if ! command -v docker-compose &> /dev/null; then
                 # Check for new 'docker compose' command
                 if ! docker compose version &> /dev/null; then
                    echo "Docker Compose (v1 or v2 plugin) could not be found, please install it on the VM."
                    exit 1
                 fi
                 # Alias docker-compose to docker compose if v1 is not found but v2 is
                 alias docker-compose='docker compose'
            fi


            # Navigate to app directory, create if it doesn't exist
            mkdir -p $APP_DIR
            cd $APP_DIR

            # Clone repo if .git directory doesn't exist, otherwise pull changes
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone $REPO_URL .
            else
              echo "Pulling latest changes..."
              git config --global --add safe.directory $APP_DIR # Ensure git commands can run
              git reset --hard HEAD # Reset local changes if any
              git pull origin main
            fi

            # Create .env file for docker-compose
            echo "Creating .env file..."
            # Note: Using https assuming Cloudflare handles SSL termination
            echo "VITE_SIGNALLING_SERVER_URL=https://${{ secrets.DOMAIN_NAME }}" > .env

            # Build and restart docker-compose services
            echo "Building Docker images..."
            docker-compose -f docker-compose.yml build

            echo "Starting Docker containers..."
            docker-compose -f docker-compose.yml up -d

            echo "Deployment successful!"
